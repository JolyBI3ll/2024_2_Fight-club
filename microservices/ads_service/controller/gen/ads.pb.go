// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: ads.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CityId          int32  `protobuf:"varint,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	AuthorUUID      string `protobuf:"bytes,3,opt,name=authorUUID,proto3" json:"authorUUID,omitempty"`
	Address         string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	PublicationDate string `protobuf:"bytes,5,opt,name=publicationDate,proto3" json:"publicationDate,omitempty"`
	Description     string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	RoomsNumber     int32  `protobuf:"varint,7,opt,name=roomsNumber,proto3" json:"roomsNumber,omitempty"`
	ViewsCount      int32  `protobuf:"varint,8,opt,name=viewsCount,proto3" json:"viewsCount,omitempty"`
}

func (x *Ad) Reset() {
	*x = Ad{}
	mi := &file_ads_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad) ProtoMessage() {}

func (x *Ad) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad.ProtoReflect.Descriptor instead.
func (*Ad) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{0}
}

func (x *Ad) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Ad) GetCityId() int32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Ad) GetAuthorUUID() string {
	if x != nil {
		return x.AuthorUUID
	}
	return ""
}

func (x *Ad) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Ad) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *Ad) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Ad) GetRoomsNumber() int32 {
	if x != nil {
		return x.RoomsNumber
	}
	return 0
}

func (x *Ad) GetViewsCount() int32 {
	if x != nil {
		return x.ViewsCount
	}
	return 0
}

type CreateAdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName     string                 `protobuf:"bytes,1,opt,name=cityName,proto3" json:"cityName,omitempty"`
	Address      string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RoomsNumber  int32                  `protobuf:"varint,4,opt,name=roomsNumber,proto3" json:"roomsNumber,omitempty"`
	DateFrom     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
	Images       [][]byte               `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
	SquareMeters int32                  `protobuf:"varint,8,opt,name=squareMeters,proto3" json:"squareMeters,omitempty"`
	Floor        int32                  `protobuf:"varint,9,opt,name=floor,proto3" json:"floor,omitempty"`
	BuildingType string                 `protobuf:"bytes,10,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	HasBalcony   bool                   `protobuf:"varint,11,opt,name=hasBalcony,proto3" json:"hasBalcony,omitempty"`
	HasElevator  bool                   `protobuf:"varint,12,opt,name=hasElevator,proto3" json:"hasElevator,omitempty"`
	HasGas       bool                   `protobuf:"varint,13,opt,name=hasGas,proto3" json:"hasGas,omitempty"`
	AuthHeader   string                 `protobuf:"bytes,14,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID    string                 `protobuf:"bytes,15,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	AuthorID     string                 `protobuf:"bytes,16,opt,name=authorID,proto3" json:"authorID,omitempty"`
	Rooms        []*AdRooms             `protobuf:"bytes,17,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *CreateAdRequest) Reset() {
	*x = CreateAdRequest{}
	mi := &file_ads_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdRequest) ProtoMessage() {}

func (x *CreateAdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdRequest.ProtoReflect.Descriptor instead.
func (*CreateAdRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAdRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *CreateAdRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateAdRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAdRequest) GetRoomsNumber() int32 {
	if x != nil {
		return x.RoomsNumber
	}
	return 0
}

func (x *CreateAdRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CreateAdRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *CreateAdRequest) GetImages() [][]byte {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateAdRequest) GetSquareMeters() int32 {
	if x != nil {
		return x.SquareMeters
	}
	return 0
}

func (x *CreateAdRequest) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *CreateAdRequest) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *CreateAdRequest) GetHasBalcony() bool {
	if x != nil {
		return x.HasBalcony
	}
	return false
}

func (x *CreateAdRequest) GetHasElevator() bool {
	if x != nil {
		return x.HasElevator
	}
	return false
}

func (x *CreateAdRequest) GetHasGas() bool {
	if x != nil {
		return x.HasGas
	}
	return false
}

func (x *CreateAdRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *CreateAdRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CreateAdRequest) GetAuthorID() string {
	if x != nil {
		return x.AuthorID
	}
	return ""
}

func (x *CreateAdRequest) GetRooms() []*AdRooms {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type AdRooms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	SquareMeters int32  `protobuf:"varint,2,opt,name=squareMeters,proto3" json:"squareMeters,omitempty"`
}

func (x *AdRooms) Reset() {
	*x = AdRooms{}
	mi := &file_ads_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdRooms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdRooms) ProtoMessage() {}

func (x *AdRooms) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdRooms.ProtoReflect.Descriptor instead.
func (*AdRooms) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{2}
}

func (x *AdRooms) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdRooms) GetSquareMeters() int32 {
	if x != nil {
		return x.SquareMeters
	}
	return 0
}

type UpdateAdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId         string                 `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	CityName     string                 `protobuf:"bytes,2,opt,name=cityName,proto3" json:"cityName,omitempty"`
	Address      string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Description  string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	RoomsNumber  int32                  `protobuf:"varint,5,opt,name=roomsNumber,proto3" json:"roomsNumber,omitempty"`
	DateFrom     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
	SquareMeters int32                  `protobuf:"varint,8,opt,name=squareMeters,proto3" json:"squareMeters,omitempty"`
	Floor        int32                  `protobuf:"varint,9,opt,name=floor,proto3" json:"floor,omitempty"`
	BuildingType string                 `protobuf:"bytes,10,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	HasBalcony   bool                   `protobuf:"varint,11,opt,name=hasBalcony,proto3" json:"hasBalcony,omitempty"`
	HasElevator  bool                   `protobuf:"varint,12,opt,name=hasElevator,proto3" json:"hasElevator,omitempty"`
	HasGas       bool                   `protobuf:"varint,13,opt,name=hasGas,proto3" json:"hasGas,omitempty"`
	Images       [][]byte               `protobuf:"bytes,14,rep,name=images,proto3" json:"images,omitempty"`
	AuthHeader   string                 `protobuf:"bytes,15,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID    string                 `protobuf:"bytes,16,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Rooms        []*AdRooms             `protobuf:"bytes,17,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *UpdateAdRequest) Reset() {
	*x = UpdateAdRequest{}
	mi := &file_ads_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdRequest) ProtoMessage() {}

func (x *UpdateAdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAdRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *UpdateAdRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *UpdateAdRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateAdRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAdRequest) GetRoomsNumber() int32 {
	if x != nil {
		return x.RoomsNumber
	}
	return 0
}

func (x *UpdateAdRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *UpdateAdRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *UpdateAdRequest) GetSquareMeters() int32 {
	if x != nil {
		return x.SquareMeters
	}
	return 0
}

func (x *UpdateAdRequest) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *UpdateAdRequest) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *UpdateAdRequest) GetHasBalcony() bool {
	if x != nil {
		return x.HasBalcony
	}
	return false
}

func (x *UpdateAdRequest) GetHasElevator() bool {
	if x != nil {
		return x.HasElevator
	}
	return false
}

func (x *UpdateAdRequest) GetHasGas() bool {
	if x != nil {
		return x.HasGas
	}
	return false
}

func (x *UpdateAdRequest) GetImages() [][]byte {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *UpdateAdRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *UpdateAdRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *UpdateAdRequest) GetRooms() []*AdRooms {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type DeletePlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId       string `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	AuthHeader string `protobuf:"bytes,2,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID  string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *DeletePlaceRequest) Reset() {
	*x = DeletePlaceRequest{}
	mi := &file_ads_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaceRequest) ProtoMessage() {}

func (x *DeletePlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaceRequest.ProtoReflect.Descriptor instead.
func (*DeletePlaceRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePlaceRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *DeletePlaceRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *DeletePlaceRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type AddToFavoritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId       string `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	AuthHeader string `protobuf:"bytes,2,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID  string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *AddToFavoritesRequest) Reset() {
	*x = AddToFavoritesRequest{}
	mi := &file_ads_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToFavoritesRequest) ProtoMessage() {}

func (x *AddToFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToFavoritesRequest.ProtoReflect.Descriptor instead.
func (*AddToFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{5}
}

func (x *AddToFavoritesRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *AddToFavoritesRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *AddToFavoritesRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type DeleteFromFavoritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId       string `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	AuthHeader string `protobuf:"bytes,2,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID  string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *DeleteFromFavoritesRequest) Reset() {
	*x = DeleteFromFavoritesRequest{}
	mi := &file_ads_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFromFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromFavoritesRequest) ProtoMessage() {}

func (x *DeleteFromFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromFavoritesRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFromFavoritesRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *DeleteFromFavoritesRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *DeleteFromFavoritesRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetUserFavoritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SessionID string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *GetUserFavoritesRequest) Reset() {
	*x = GetUserFavoritesRequest{}
	mi := &file_ads_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFavoritesRequest) ProtoMessage() {}

func (x *GetUserFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFavoritesRequest.ProtoReflect.Descriptor instead.
func (*GetUserFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserFavoritesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserFavoritesRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type DeleteAdImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId       string `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	ImageId    string `protobuf:"bytes,2,opt,name=imageId,proto3" json:"imageId,omitempty"`
	AuthHeader string `protobuf:"bytes,3,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID  string `protobuf:"bytes,4,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *DeleteAdImageRequest) Reset() {
	*x = DeleteAdImageRequest{}
	mi := &file_ads_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAdImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdImageRequest) ProtoMessage() {}

func (x *DeleteAdImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteAdImageRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAdImageRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *DeleteAdImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *DeleteAdImageRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *DeleteAdImageRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetPlacesPerCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName string `protobuf:"bytes,1,opt,name=cityName,proto3" json:"cityName,omitempty"`
}

func (x *GetPlacesPerCityRequest) Reset() {
	*x = GetPlacesPerCityRequest{}
	mi := &file_ads_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlacesPerCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlacesPerCityRequest) ProtoMessage() {}

func (x *GetPlacesPerCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlacesPerCityRequest.ProtoReflect.Descriptor instead.
func (*GetPlacesPerCityRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlacesPerCityRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

type GetUserPlacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserPlacesRequest) Reset() {
	*x = GetUserPlacesRequest{}
	mi := &file_ads_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserPlacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPlacesRequest) ProtoMessage() {}

func (x *GetUserPlacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPlacesRequest.ProtoReflect.Descriptor instead.
func (*GetUserPlacesRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserPlacesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AdFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Rating      string `protobuf:"bytes,2,opt,name=rating,proto3" json:"rating,omitempty"`
	NewThisWeek string `protobuf:"bytes,3,opt,name=newThisWeek,proto3" json:"newThisWeek,omitempty"`
	HostGender  string `protobuf:"bytes,4,opt,name=hostGender,proto3" json:"hostGender,omitempty"`
	GuestCount  string `protobuf:"bytes,5,opt,name=guestCount,proto3" json:"guestCount,omitempty"`
	Limit       string `protobuf:"bytes,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset      string `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	DateFrom    string `protobuf:"bytes,8,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo      string `protobuf:"bytes,9,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
}

func (x *AdFilterRequest) Reset() {
	*x = AdFilterRequest{}
	mi := &file_ads_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdFilterRequest) ProtoMessage() {}

func (x *AdFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdFilterRequest.ProtoReflect.Descriptor instead.
func (*AdFilterRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{11}
}

func (x *AdFilterRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AdFilterRequest) GetRating() string {
	if x != nil {
		return x.Rating
	}
	return ""
}

func (x *AdFilterRequest) GetNewThisWeek() string {
	if x != nil {
		return x.NewThisWeek
	}
	return ""
}

func (x *AdFilterRequest) GetHostGender() string {
	if x != nil {
		return x.HostGender
	}
	return ""
}

func (x *AdFilterRequest) GetGuestCount() string {
	if x != nil {
		return x.GuestCount
	}
	return ""
}

func (x *AdFilterRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *AdFilterRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *AdFilterRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *AdFilterRequest) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

type GetAllAdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CityId          int32            `protobuf:"varint,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	AuthorUUID      string           `protobuf:"bytes,3,opt,name=authorUUID,proto3" json:"authorUUID,omitempty"`
	Address         string           `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	PublicationDate string           `protobuf:"bytes,5,opt,name=publicationDate,proto3" json:"publicationDate,omitempty"`
	Description     string           `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	RoomsNumber     int32            `protobuf:"varint,7,opt,name=roomsNumber,proto3" json:"roomsNumber,omitempty"`
	ViewsCount      int32            `protobuf:"varint,8,opt,name=viewsCount,proto3" json:"viewsCount,omitempty"`
	SquareMeters    int32            `protobuf:"varint,9,opt,name=squareMeters,proto3" json:"squareMeters,omitempty"`
	Floor           int32            `protobuf:"varint,10,opt,name=floor,proto3" json:"floor,omitempty"`
	BuildingType    string           `protobuf:"bytes,11,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	HasBalcony      bool             `protobuf:"varint,12,opt,name=hasBalcony,proto3" json:"hasBalcony,omitempty"`
	HasElevator     bool             `protobuf:"varint,13,opt,name=hasElevator,proto3" json:"hasElevator,omitempty"`
	HasGas          bool             `protobuf:"varint,14,opt,name=hasGas,proto3" json:"hasGas,omitempty"`
	LikesCount      int32            `protobuf:"varint,15,opt,name=LikesCount,proto3" json:"LikesCount,omitempty"`
	Priority        int32            `protobuf:"varint,16,opt,name=priority,proto3" json:"priority,omitempty"`
	EndBoostDate    string           `protobuf:"bytes,17,opt,name=endBoostDate,proto3" json:"endBoostDate,omitempty"`
	CityName        string           `protobuf:"bytes,18,opt,name=cityName,proto3" json:"cityName,omitempty"`
	AdDateFrom      string           `protobuf:"bytes,19,opt,name=adDateFrom,proto3" json:"adDateFrom,omitempty"`
	AdDateTo        string           `protobuf:"bytes,20,opt,name=adDateTo,proto3" json:"adDateTo,omitempty"`
	AdAuthor        *UserResponse    `protobuf:"bytes,21,opt,name=adAuthor,proto3" json:"adAuthor,omitempty"`
	Images          []*ImageResponse `protobuf:"bytes,22,rep,name=images,proto3" json:"images,omitempty"`
	Rooms           []*AdRooms       `protobuf:"bytes,23,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetAllAdsResponse) Reset() {
	*x = GetAllAdsResponse{}
	mi := &file_ads_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllAdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdsResponse) ProtoMessage() {}

func (x *GetAllAdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdsResponse.ProtoReflect.Descriptor instead.
func (*GetAllAdsResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllAdsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllAdsResponse) GetCityId() int32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetAllAdsResponse) GetAuthorUUID() string {
	if x != nil {
		return x.AuthorUUID
	}
	return ""
}

func (x *GetAllAdsResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAllAdsResponse) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *GetAllAdsResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAllAdsResponse) GetRoomsNumber() int32 {
	if x != nil {
		return x.RoomsNumber
	}
	return 0
}

func (x *GetAllAdsResponse) GetViewsCount() int32 {
	if x != nil {
		return x.ViewsCount
	}
	return 0
}

func (x *GetAllAdsResponse) GetSquareMeters() int32 {
	if x != nil {
		return x.SquareMeters
	}
	return 0
}

func (x *GetAllAdsResponse) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *GetAllAdsResponse) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *GetAllAdsResponse) GetHasBalcony() bool {
	if x != nil {
		return x.HasBalcony
	}
	return false
}

func (x *GetAllAdsResponse) GetHasElevator() bool {
	if x != nil {
		return x.HasElevator
	}
	return false
}

func (x *GetAllAdsResponse) GetHasGas() bool {
	if x != nil {
		return x.HasGas
	}
	return false
}

func (x *GetAllAdsResponse) GetLikesCount() int32 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *GetAllAdsResponse) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *GetAllAdsResponse) GetEndBoostDate() string {
	if x != nil {
		return x.EndBoostDate
	}
	return ""
}

func (x *GetAllAdsResponse) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *GetAllAdsResponse) GetAdDateFrom() string {
	if x != nil {
		return x.AdDateFrom
	}
	return ""
}

func (x *GetAllAdsResponse) GetAdDateTo() string {
	if x != nil {
		return x.AdDateTo
	}
	return ""
}

func (x *GetAllAdsResponse) GetAdAuthor() *UserResponse {
	if x != nil {
		return x.AdAuthor
	}
	return nil
}

func (x *GetAllAdsResponse) GetImages() []*ImageResponse {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GetAllAdsResponse) GetRooms() []*AdRooms {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type GetAllAdsResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Housing []*GetAllAdsResponse `protobuf:"bytes,1,rep,name=housing,proto3" json:"housing,omitempty"`
}

func (x *GetAllAdsResponseList) Reset() {
	*x = GetAllAdsResponseList{}
	mi := &file_ads_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllAdsResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdsResponseList) ProtoMessage() {}

func (x *GetAllAdsResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdsResponseList.ProtoReflect.Descriptor instead.
func (*GetAllAdsResponseList) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllAdsResponseList) GetHousing() []*GetAllAdsResponse {
	if x != nil {
		return x.Housing
	}
	return nil
}

type GetPlaceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId         string `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	IsAuthorized bool   `protobuf:"varint,2,opt,name=isAuthorized,proto3" json:"isAuthorized,omitempty"`
}

func (x *GetPlaceByIdRequest) Reset() {
	*x = GetPlaceByIdRequest{}
	mi := &file_ads_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceByIdRequest) ProtoMessage() {}

func (x *GetPlaceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPlaceByIdRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{14}
}

func (x *GetPlaceByIdRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *GetPlaceByIdRequest) GetIsAuthorized() bool {
	if x != nil {
		return x.IsAuthorized
	}
	return false
}

type AdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *AdResponse) Reset() {
	*x = AdResponse{}
	mi := &file_ads_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdResponse) ProtoMessage() {}

func (x *AdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdResponse.ProtoReflect.Descriptor instead.
func (*AdResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{15}
}

func (x *AdResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_ads_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type ImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ImageResponse) Reset() {
	*x = ImageResponse{}
	mi := &file_ads_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageResponse) ProtoMessage() {}

func (x *ImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageResponse.ProtoReflect.Descriptor instead.
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{17}
}

func (x *ImageResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImageResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating     float32 `protobuf:"fixed32,1,opt,name=rating,proto3" json:"rating,omitempty"`
	Avatar     string  `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Name       string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sex        string  `protobuf:"bytes,4,opt,name=sex,proto3" json:"sex,omitempty"`
	BirthDate  string  `protobuf:"bytes,5,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	GuestCount int32   `protobuf:"varint,6,opt,name=guestCount,proto3" json:"guestCount,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_ads_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{18}
}

func (x *UserResponse) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UserResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserResponse) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserResponse) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *UserResponse) GetGuestCount() int32 {
	if x != nil {
		return x.GuestCount
	}
	return 0
}

type UpdatePriorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId       string `protobuf:"bytes,1,opt,name=adId,proto3" json:"adId,omitempty"`
	AuthHeader string `protobuf:"bytes,2,opt,name=authHeader,proto3" json:"authHeader,omitempty"`
	SessionID  string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Amount     string `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *UpdatePriorityRequest) Reset() {
	*x = UpdatePriorityRequest{}
	mi := &file_ads_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePriorityRequest) ProtoMessage() {}

func (x *UpdatePriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePriorityRequest.ProtoReflect.Descriptor instead.
func (*UpdatePriorityRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{19}
}

func (x *UpdatePriorityRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *UpdatePriorityRequest) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *UpdatePriorityRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *UpdatePriorityRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

var File_ads_proto protoreflect.FileDescriptor

var file_ads_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x64, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf8, 0x01, 0x0a, 0x02, 0x41, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc5, 0x04, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x61, 0x73, 0x47, 0x61, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x68, 0x61, 0x73, 0x47, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x05, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x07, 0x41, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xbd, 0x04, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63,
	0x6f, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x45, 0x6c, 0x65,
	0x76, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x47, 0x61, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x47, 0x61, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x66, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x69, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x41, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x54, 0x68, 0x69, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x54, 0x68, 0x69, 0x73, 0x57, 0x65, 0x65,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x22, 0xf2, 0x05, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61,
	0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73,
	0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x45, 0x6c,
	0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61,
	0x73, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73,
	0x47, 0x61, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x47, 0x61,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x52, 0x6f, 0x6f, 0x6d,
	0x73, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73,
	0x69, 0x6e, 0x67, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0xa2, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x95, 0x06, 0x0a, 0x03, 0x41, 0x64, 0x73,
	0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x12, 0x14, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x14, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41,
	0x64, 0x12, 0x34, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x14, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x32, 0x5a, 0x30, 0x2e, 0x2e, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x3b, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ads_proto_rawDescOnce sync.Once
	file_ads_proto_rawDescData = file_ads_proto_rawDesc
)

func file_ads_proto_rawDescGZIP() []byte {
	file_ads_proto_rawDescOnce.Do(func() {
		file_ads_proto_rawDescData = protoimpl.X.CompressGZIP(file_ads_proto_rawDescData)
	})
	return file_ads_proto_rawDescData
}

var file_ads_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_ads_proto_goTypes = []any{
	(*Ad)(nil),                         // 0: ads.Ad
	(*CreateAdRequest)(nil),            // 1: ads.CreateAdRequest
	(*AdRooms)(nil),                    // 2: ads.AdRooms
	(*UpdateAdRequest)(nil),            // 3: ads.UpdateAdRequest
	(*DeletePlaceRequest)(nil),         // 4: ads.DeletePlaceRequest
	(*AddToFavoritesRequest)(nil),      // 5: ads.AddToFavoritesRequest
	(*DeleteFromFavoritesRequest)(nil), // 6: ads.DeleteFromFavoritesRequest
	(*GetUserFavoritesRequest)(nil),    // 7: ads.GetUserFavoritesRequest
	(*DeleteAdImageRequest)(nil),       // 8: ads.DeleteAdImageRequest
	(*GetPlacesPerCityRequest)(nil),    // 9: ads.GetPlacesPerCityRequest
	(*GetUserPlacesRequest)(nil),       // 10: ads.GetUserPlacesRequest
	(*AdFilterRequest)(nil),            // 11: ads.AdFilterRequest
	(*GetAllAdsResponse)(nil),          // 12: ads.GetAllAdsResponse
	(*GetAllAdsResponseList)(nil),      // 13: ads.GetAllAdsResponseList
	(*GetPlaceByIdRequest)(nil),        // 14: ads.GetPlaceByIdRequest
	(*AdResponse)(nil),                 // 15: ads.AdResponse
	(*DeleteResponse)(nil),             // 16: ads.DeleteResponse
	(*ImageResponse)(nil),              // 17: ads.ImageResponse
	(*UserResponse)(nil),               // 18: ads.UserResponse
	(*UpdatePriorityRequest)(nil),      // 19: ads.UpdatePriorityRequest
	(*timestamppb.Timestamp)(nil),      // 20: google.protobuf.Timestamp
}
var file_ads_proto_depIdxs = []int32{
	20, // 0: ads.CreateAdRequest.dateFrom:type_name -> google.protobuf.Timestamp
	20, // 1: ads.CreateAdRequest.dateTo:type_name -> google.protobuf.Timestamp
	2,  // 2: ads.CreateAdRequest.rooms:type_name -> ads.AdRooms
	20, // 3: ads.UpdateAdRequest.dateFrom:type_name -> google.protobuf.Timestamp
	20, // 4: ads.UpdateAdRequest.dateTo:type_name -> google.protobuf.Timestamp
	2,  // 5: ads.UpdateAdRequest.rooms:type_name -> ads.AdRooms
	18, // 6: ads.GetAllAdsResponse.adAuthor:type_name -> ads.UserResponse
	17, // 7: ads.GetAllAdsResponse.images:type_name -> ads.ImageResponse
	2,  // 8: ads.GetAllAdsResponse.rooms:type_name -> ads.AdRooms
	12, // 9: ads.GetAllAdsResponseList.housing:type_name -> ads.GetAllAdsResponse
	11, // 10: ads.Ads.GetAllPlaces:input_type -> ads.AdFilterRequest
	14, // 11: ads.Ads.GetOnePlace:input_type -> ads.GetPlaceByIdRequest
	1,  // 12: ads.Ads.CreatePlace:input_type -> ads.CreateAdRequest
	3,  // 13: ads.Ads.UpdatePlace:input_type -> ads.UpdateAdRequest
	4,  // 14: ads.Ads.DeletePlace:input_type -> ads.DeletePlaceRequest
	9,  // 15: ads.Ads.GetPlacesPerCity:input_type -> ads.GetPlacesPerCityRequest
	10, // 16: ads.Ads.GetUserPlaces:input_type -> ads.GetUserPlacesRequest
	8,  // 17: ads.Ads.DeleteAdImage:input_type -> ads.DeleteAdImageRequest
	5,  // 18: ads.Ads.AddToFavorites:input_type -> ads.AddToFavoritesRequest
	6,  // 19: ads.Ads.DeleteFromFavorites:input_type -> ads.DeleteFromFavoritesRequest
	7,  // 20: ads.Ads.GetUserFavorites:input_type -> ads.GetUserFavoritesRequest
	19, // 21: ads.Ads.UpdatePriority:input_type -> ads.UpdatePriorityRequest
	13, // 22: ads.Ads.GetAllPlaces:output_type -> ads.GetAllAdsResponseList
	12, // 23: ads.Ads.GetOnePlace:output_type -> ads.GetAllAdsResponse
	0,  // 24: ads.Ads.CreatePlace:output_type -> ads.Ad
	15, // 25: ads.Ads.UpdatePlace:output_type -> ads.AdResponse
	16, // 26: ads.Ads.DeletePlace:output_type -> ads.DeleteResponse
	13, // 27: ads.Ads.GetPlacesPerCity:output_type -> ads.GetAllAdsResponseList
	13, // 28: ads.Ads.GetUserPlaces:output_type -> ads.GetAllAdsResponseList
	16, // 29: ads.Ads.DeleteAdImage:output_type -> ads.DeleteResponse
	15, // 30: ads.Ads.AddToFavorites:output_type -> ads.AdResponse
	15, // 31: ads.Ads.DeleteFromFavorites:output_type -> ads.AdResponse
	13, // 32: ads.Ads.GetUserFavorites:output_type -> ads.GetAllAdsResponseList
	15, // 33: ads.Ads.UpdatePriority:output_type -> ads.AdResponse
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ads_proto_init() }
func file_ads_proto_init() {
	if File_ads_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ads_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ads_proto_goTypes,
		DependencyIndexes: file_ads_proto_depIdxs,
		MessageInfos:      file_ads_proto_msgTypes,
	}.Build()
	File_ads_proto = out.File
	file_ads_proto_rawDesc = nil
	file_ads_proto_goTypes = nil
	file_ads_proto_depIdxs = nil
}
